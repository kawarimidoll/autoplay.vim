*autoplay.txt* Operate Vim automatically

Author: kawarimidoll
License: MIT https://github.com/kawarimidoll/autoplay.vim/blob/main/LICENSE

==============================================================================
INTRODUCTION                                           *autoplay-introduction*

    *autoplay* is a plugin to operate Vim automatically.

==============================================================================
INTERFACE                                                 *autoplay-interface*

------------------------------------------------------------------------------
FUNCTIONS                                                 *autoplay-functions*

autoplay#reserve({opts})                                  *autoplay#reserve()*

    Reserve autoplay.
    {opts} is a dictionary with these fields:
      - scripts                                        *autoplay-opts-scripts*
        (REQUIRED)
        List of scripts to autoplay.
        See |autoplay-scripts| for details.
      - name                                              *autoplay-opts-name*
        (default: '')
        Name of the autoplay.
        If the same name is specified, the old one is overwritten.
      - wait                                              *autoplay-opts-wait*
        (default: 0)
        Wait time (in milliseconds) between executions of each script.
      - spell_out                                    *autoplay-opts-spell_out*
        (default: v:false)
        Flag if the |autoplay-scripts-string| should be executed one character
        at a time.
      - remap
        (default: v:true)
        Flag if mapping is used or not.

    example:
>
    call autoplay#reserve({
        \ 'wait': 40,
        \ 'spell_out': 1,
        \ 'scripts': [
        \   "iAutoplay start!\<esc>",
        \   "oHello world!\<esc>",
        \ ],
        \ })
<

autoplay#run([{name}])                                        *autoplay#run()*

    Run autoplay by |autoplay-opts-name|.
    ({name} default: '')

------------------------------------------------------------------------------
AUTOPLAY-SCRIPTS                                            *autoplay-scripts*

    This section describes the values that can be set for
    |autoplay-opts-scripts|.
    It is an array whose elements are the following items.

                                                     *autoplay-scripts-string*

    Basically, you specify the key you want to emulate as a |string|.
    If you want to use non-letter keys, use |<>|.

    example:
>
    "iHello world!\<esc>"
<

    You can also use |dict| with the following keys.

call                                                   *autoplay-scripts-call*

    Run function using |call()|.
    Functions can be specified using function name or |Funcref|.
    Arguments can be passed using |autoplay-scripts-args| (optional).

    example:
>
    { "call": "setline", "args": ['.', 'ok'] }
<

expr                                                   *autoplay-scripts-expr*

    Run function and use its return value using |call()|.
    Functions can be specified using function name or |Funcref|.
    Arguments can be passed using |autoplay-scripts-args| (optional).

    example:
>
    { "expr": "repeat", "args": ['i', 3] },
<

args                                                   *autoplay-scripts-args*

    Define args for |autoplay-scripts-call| or |autoplay-scripts-expr| by
    |list|.

    example:
>
    { "expr": "repeat", "args": ['i', 3] },
<

eval                                                   *autoplay-scripts-eval*

    Evaluate string and use its result using |eval()|.

    example:
>
    { "eval": "1 + 2" },
<

exec                                                   *autoplay-scripts-exec*

    Execute Ex commands using |execute()|.

    example:
>
    { "exec": "echomsg 'hello'" },
<

text                                                   *autoplay-scripts-text*

    Almost the same as |autoplay-scripts-string|, but unaffected by
    |autoplay-opts-spell_out|. In other words, it is always executed at once.
    This is useful to emulate normal mode commands that have multiple keys.

    example:
>
    { "text": "gUip" },
<

wait                                                   *autoplay-scripts-wait*

    Wait time (in milliseconds) before the next script.
    It takes precedence over |autoplay-opts-wait|.

    example:
>
    { "wait": 1000 },
<

    It can be used with other keys.

    example:
>
    { "exec": "help index", "wait": 1000  },
<

==============================================================================
FAQ                                                             *autoplay-faq*

What is the priority of the keys in scripts?~

    |autoplay-scripts| are processed at the following priority levels.

      - |autoplay-scripts-string|
      - |autoplay-scripts-call|
      - |autoplay-scripts-expr|
      - |autoplay-scripts-eval|
      - |autoplay-scripts-exec|
      - |autoplay-scripts-text|

    For example, if both `call` and `exec` are specified, only `call` will be
    executed.

==============================================================================
CHANGELOG                                                 *autoplay-changelog*

vim:tw=78:fo=tcq2mM:ts=8:ft=help:norl
